{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nicke\\\\OneDrive\\\\Stuff\\\\Documents\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.stream.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: this.props.stream.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(matchStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","stream","title","description","mapStateToProps","state","ownProps","streams","matchStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACxCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EACA,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,wBACE;AAAA,8BACE;AAAA,kBAAK,KAAKL,KAAL,CAAWK,MAAX,CAAkBC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK,KAAKN,KAAL,CAAWK,MAAX,CAAkBE;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMA;;AAduC;;AAiBzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeR,OAAO,CAACiB,iBAAD,EAAoB;AAAChB,EAAAA;AAAD,CAApB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux'\nimport {fetchStream} from '../../actions'\n\nclass StreamShow extends React.Component {\n componentDidMount(){\n   this.props.fetchStream(this.props.match.params.id);\n }\n\n render(){\n   if(!this.props.stream)\n   return <div>Loading...</div>\n  return (\n    <div>\n      <h1>{this.props.stream.title}</h1>\n      <h5>{this.props.stream.description}</h5>\n    </div>\n  );\n }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(matchStateToProps, {fetchStream})(StreamShow);\n"]},"metadata":{},"sourceType":"module"}