{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicke\\\\OneDrive\\\\Stuff\\\\Documents\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useCallback } from \"react\";\nimport flv from \"flv.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nconst StreamShow = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const id = props.match.params.id;\n  const stream = useSelector(state => state.streams[id]);\n  const videoRef = useRef();\n  const player = useRef();\n  const buildPlayer = useCallback(() => {\n    if (player.current || !stream) {\n      return;\n    }\n\n    player.current = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    player.current.attachMediaElement(videoRef.current);\n    player.current.load();\n  }, [id, stream]);\n  useEffect(() => {\n    dispatch(fetchStream(id));\n    buildPlayer();\n    return () => {\n      return player.current.destroy();\n    };\n  }, [buildPlayer, dispatch, id]);\n  if (!stream) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: \"100%\"\n      },\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: stream.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: stream.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StreamShow, \"uybx9MtNE29fsEKktqciDP6nMWM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = StreamShow;\nexport default StreamShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamShow\");","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamShow.js"],"names":["React","useEffect","useRef","useCallback","flv","useSelector","useDispatch","fetchStream","StreamShow","props","dispatch","id","match","params","stream","state","streams","videoRef","player","buildPlayer","current","createPlayer","type","url","attachMediaElement","load","destroy","width","title","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,EAAE,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,QAAMG,MAAM,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcL,EAAd,CAAZ,CAA1B;AACA,QAAMM,QAAQ,GAAGf,MAAM,EAAvB;AACA,QAAMgB,MAAM,GAAGhB,MAAM,EAArB;AAEA,QAAMiB,WAAW,GAAGhB,WAAW,CAAC,MAAM;AACpC,QAAIe,MAAM,CAACE,OAAP,IAAkB,CAACN,MAAvB,EAA+B;AAC7B;AACD;;AACDI,IAAAA,MAAM,CAACE,OAAP,GAAiBhB,GAAG,CAACiB,YAAJ,CAAiB;AAChCC,MAAAA,IAAI,EAAE,KAD0B;AAEhCC,MAAAA,GAAG,EAAG,8BAA6BZ,EAAG;AAFN,KAAjB,CAAjB;AAIAO,IAAAA,MAAM,CAACE,OAAP,CAAeI,kBAAf,CAAkCP,QAAQ,CAACG,OAA3C;AACAF,IAAAA,MAAM,CAACE,OAAP,CAAeK,IAAf;AACD,GAV8B,EAU5B,CAACd,EAAD,EAAKG,MAAL,CAV4B,CAA/B;AAYAb,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACH,WAAW,CAACI,EAAD,CAAZ,CAAR;AACAQ,IAAAA,WAAW;AACX,WAAO,MAAM;AACX,aAAOD,MAAM,CAACE,OAAP,CAAeM,OAAf,EAAP;AACD,KAFD;AAGD,GANQ,EAMN,CAACP,WAAD,EAAcT,QAAd,EAAwBC,EAAxB,CANM,CAAT;AAQA,MAAI,CAACG,MAAL,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,sBACE;AAAA,4BACE;AAAO,MAAA,GAAG,EAAEG,QAAZ;AAAsB,MAAA,KAAK,EAAE;AAAEU,QAAAA,KAAK,EAAE;AAAT,OAA7B;AAAgD,MAAA,QAAQ,EAAE;AAA1D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKb,MAAM,CAACc;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKd,MAAM,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAnCD;;GAAMrB,U;UACaF,W,EAEFD,W;;;KAHXG,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef, useCallback } from \"react\";\nimport flv from \"flv.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nconst StreamShow = (props) => {\n  const dispatch = useDispatch();\n  const id = props.match.params.id;\n  const stream = useSelector((state) => state.streams[id]);\n  const videoRef = useRef();\n  const player = useRef();\n\n  const buildPlayer = useCallback(() => {\n    if (player.current || !stream) {\n      return;\n    }\n    player.current = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${id}.flv`,\n    });\n    player.current.attachMediaElement(videoRef.current);\n    player.current.load();\n  }, [id, stream]);\n\n  useEffect(() => {\n    dispatch(fetchStream(id));\n    buildPlayer();\n    return () => {\n      return player.current.destroy();\n    };\n  }, [buildPlayer, dispatch, id]);\n\n  if (!stream) return <div>Loading...</div>;\n  return (\n    <div>\n      <video ref={videoRef} style={{ width: \"100%\" }} controls={true} />\n      <h1>{stream.title}</h1>\n      <h5>{stream.description}</h5>\n    </div>\n  );\n};\n\nexport default StreamShow;\n"]},"metadata":{},"sourceType":"module"}