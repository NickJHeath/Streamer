{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nicke\\\\OneDrive\\\\Stuff\\\\Documents\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"StreamEdit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps)(StreamEdit);","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamEdit.js"],"names":["render","React","connect","StreamEdit","Component","componentDidMount","props","fetchStream","match","params","id","console","log","mapStateToProps","state","ownProps","stream","streams"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAKA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAEzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEAV,EAAAA,MAAM,GAAG;AAAEW,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AARwC;;AAYzC,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAACC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACD,CAFD;;AAIA,eAAeR,OAAO,CAACW,eAAD,CAAP,CAAyBV,UAAzB,CAAf","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport {connect} from 'react-redux'\n\n\n\n\nclass StreamEdit extends React.Component { \n \ncomponentDidMount() {\n  this.props.fetchStream(this.props.match.params.id);\n}\n\n render() { console.log(this.props);\n  return <div>StreamEdit</div>;\n}\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {stream: state.streams[ownProps.match.params.id]};\n}\n\nexport default connect(mapStateToProps)(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}