{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nconst GoogleAuth = () => {\n  _s();\n\n  const [auth, setAuth] = useState(null);\n  const dispatch = useDispatch();\n  const isSignedIn = useSelector(state => {\n    state.auth.isSignedIn;\n  });\n  const userId = useSelector(state => {\n    state.auth.isSignedIn;\n  });\n\n  const onAuthChange = isSignedIn => {\n    if (isSignedIn) {\n      signIn(auth.currentUser.get().getId());\n    } else {\n      signOut();\n    }\n  };\n\n  useEffect(() => {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        client_id: \"1086701695175-8kgimroibtpl2o7nk0ks5r9ih5cctgjh.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange); //   this.auth.isSignedIn.listen(this.onAuthChange(this.auth.isSignedIn.get()));\n      });\n    });\n  }, [dispatch]);\n}; // class GoogleAuth extends React.Component {\n//   componentDidMount() {\n//     window.gapi.load(\"client:auth2\", () => {\n//       window.gapi.client\n//         .init({\n//           client_id:\n//             \"1086701695175-8kgimroibtpl2o7nk0ks5r9ih5cctgjh.apps.googleusercontent.com\",\n//           scope: \"email\",\n//         })\n//         .then(() => {\n//           this.auth = window.gapi.auth2.getAuthInstance();\n//           this.onAuthChange(this.auth.isSignedIn.get());\n//           this.auth.isSignedIn.listen(this.onAuthChange);\n//           //   this.auth.isSignedIn.listen(this.onAuthChange(this.auth.isSignedIn.get()));\n//         });\n//     });\n//   }\n//   onAuthChange = (isSignedIn) => {\n//     if (isSignedIn) {\n//       this.props.signIn(this.auth.currentUser.get().getId());\n//     } else {\n//       this.props.signOut();\n//     }\n//   };\n//   onSignInClick = () => {\n//     this.auth.signIn();\n//   };\n//   onSignOutClick = () => {\n//     this.auth.signOut();\n//   };\n//   renderAuthButton() {\n//     if (this.props.isSignedIn === null) {\n//       return null;\n//     } else if (this.props.isSignedIn) {\n//       return (\n//         <button onClick={this.onSignOutClick} className=\"ui red google button\">\n//           <i className=\"google icon\"> </i>Sign out\n//         </button>\n//       );\n//     } else {\n//       return (\n//         <button onClick={this.onSignInClick} className=\"ui red google button\">\n//           <i className=\"google icon\"> </i>Sign in with Google\n//         </button>\n//       );\n//     }\n//   }\n//   render() {\n//     return <div>{this.renderAuthButton()}</div>;\n//   }\n// }\n// const mapStateToProps = (state) => {\n//   return { isSignedIn: state.auth.isSignedIn };\n// };\n// export default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n\n\n_s(GoogleAuth, \"FUMjYHI6tLeowdB3BGwnX4sV9d8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = GoogleAuth;\nexport default GoogleAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/GoogleAuth.js"],"names":["React","useEffect","useState","useSelector","useDispatch","signIn","signOut","GoogleAuth","auth","setAuth","dispatch","isSignedIn","state","userId","onAuthChange","currentUser","get","getId","window","gapi","load","client","init","client_id","scope","then","auth2","getAuthInstance","listen"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,UAAU,GAAGR,WAAW,CAAES,KAAD,IAAW;AACxCA,IAAAA,KAAK,CAACJ,IAAN,CAAWG,UAAX;AACD,GAF6B,CAA9B;AAGA,QAAME,MAAM,GAAGV,WAAW,CAAES,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACJ,IAAN,CAAWG,UAAX;AACD,GAFyB,CAA1B;;AAIA,QAAMG,YAAY,GAAIH,UAAD,IAAgB;AACnC,QAAIA,UAAJ,EAAgB;AACdN,MAAAA,MAAM,CAACG,IAAI,CAACO,WAAL,CAAiBC,GAAjB,GAAuBC,KAAvB,EAAD,CAAN;AACD,KAFD,MAEO;AACLX,MAAAA,OAAO;AACR;AACF,GAND;;AAQAL,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,SAAS,EACP,2EAFE;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV,aAAKjB,IAAL,GAAYU,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKb,YAAL,CAAkB,KAAKN,IAAL,CAAUG,UAAV,CAAqBK,GAArB,EAAlB;AACA,aAAKR,IAAL,CAAUG,UAAV,CAAqBiB,MAArB,CAA4B,KAAKd,YAAjC,EAHU,CAIV;AACD,OAXH;AAYD,KAbD;AAcD,GAfQ,EAeN,CAACJ,QAAD,CAfM,CAAT;AAgBD,CAlCD,C,CAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;GAhGMH,U;UAEaH,W,EACED,W,EAGJA,W;;;KANXI,U;AAkGN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nconst GoogleAuth = () => {\n  const [auth, setAuth] = useState(null);\n  const dispatch = useDispatch();\n  const isSignedIn = useSelector((state) => {\n    state.auth.isSignedIn;\n  });\n  const userId = useSelector((state) => {\n    state.auth.isSignedIn;\n  });\n\n  const onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      signIn(auth.currentUser.get().getId());\n    } else {\n      signOut();\n    }\n  };\n\n  useEffect(() => {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          client_id:\n            \"1086701695175-8kgimroibtpl2o7nk0ks5r9ih5cctgjh.apps.googleusercontent.com\",\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n          //   this.auth.isSignedIn.listen(this.onAuthChange(this.auth.isSignedIn.get()));\n        });\n    });\n  }, [dispatch]);\n};\n// class GoogleAuth extends React.Component {\n//   componentDidMount() {\n//     window.gapi.load(\"client:auth2\", () => {\n//       window.gapi.client\n//         .init({\n//           client_id:\n//             \"1086701695175-8kgimroibtpl2o7nk0ks5r9ih5cctgjh.apps.googleusercontent.com\",\n//           scope: \"email\",\n//         })\n//         .then(() => {\n//           this.auth = window.gapi.auth2.getAuthInstance();\n//           this.onAuthChange(this.auth.isSignedIn.get());\n//           this.auth.isSignedIn.listen(this.onAuthChange);\n//           //   this.auth.isSignedIn.listen(this.onAuthChange(this.auth.isSignedIn.get()));\n//         });\n//     });\n//   }\n\n//   onAuthChange = (isSignedIn) => {\n//     if (isSignedIn) {\n//       this.props.signIn(this.auth.currentUser.get().getId());\n//     } else {\n//       this.props.signOut();\n//     }\n//   };\n\n//   onSignInClick = () => {\n//     this.auth.signIn();\n//   };\n\n//   onSignOutClick = () => {\n//     this.auth.signOut();\n//   };\n\n//   renderAuthButton() {\n//     if (this.props.isSignedIn === null) {\n//       return null;\n//     } else if (this.props.isSignedIn) {\n//       return (\n//         <button onClick={this.onSignOutClick} className=\"ui red google button\">\n//           <i className=\"google icon\"> </i>Sign out\n//         </button>\n//       );\n//     } else {\n//       return (\n//         <button onClick={this.onSignInClick} className=\"ui red google button\">\n//           <i className=\"google icon\"> </i>Sign in with Google\n//         </button>\n//       );\n//     }\n//   }\n\n//   render() {\n//     return <div>{this.renderAuthButton()}</div>;\n//   }\n// }\n\n// const mapStateToProps = (state) => {\n//   return { isSignedIn: state.auth.isSignedIn };\n// };\n\n// export default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}