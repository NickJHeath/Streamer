{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nicke\\\\OneDrive\\\\Stuff\\\\Documents\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from \"react\";\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.stream.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: this.props.stream.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","Component","constructor","props","videoRef","createRef","componentDidMount","match","params","id","render","stream","width","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,QAAL,gBAAgBR,KAAK,CAACS,SAAN,EAAhB;AACD;;AAEFC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,QAAG,CAAC,KAAKP,KAAL,CAAWQ,MAAf,EACA,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,wBACE;AAAA,8BACE;AAAO,QAAA,GAAG,EAAE,KAAKP,QAAjB;AAA2B,QAAA,KAAK,EAAE;AAACQ,UAAAA,KAAK,EAAE;AAAR;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK,KAAKT,KAAL,CAAWQ,MAAX,CAAkBE;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAK,KAAKV,KAAL,CAAWQ,MAAX,CAAkBG;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOA;;AArBuC;;AAwBzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeX,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import React from \"react\";\nimport flv from 'flv.js'\nimport {connect} from 'react-redux'\nimport {fetchStream} from '../../actions'\n\nclass StreamShow extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.videoRef = React.createRef()\n  }\n\n componentDidMount() {\n   this.props.fetchStream(this.props.match.params.id);\n }\n\n render(){\n   if(!this.props.stream)\n   return <div>Loading...</div>\n  return (\n    <div>\n      <video ref={this.videoRef} style={{width: '100%'}} />\n      <h1>{this.props.stream.title}</h1>\n      <h5>{this.props.stream.description}</h5>\n    </div>\n  );\n }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(mapStateToProps, {fetchStream})(StreamShow);\n"]},"metadata":{},"sourceType":"module"}