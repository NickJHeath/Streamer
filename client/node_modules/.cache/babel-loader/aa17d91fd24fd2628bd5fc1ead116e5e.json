{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicke\\\\OneDrive\\\\Stuff\\\\Documents\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst StreamList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const streams = useSelector(state => Object.values(state.streams));\n  const currentUserId = useSelector(state => state.auth.userId);\n  const isSignedIn = useSelector(state => state.auth.isSignedIn);\n  useEffect(params => {\n    dispatch(fetchStreams());\n  }, [dispatch]);\n\n  const renderAdmin = stream => {\n    if (stream.userId === currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/edit/${stream.id}`,\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/delete/${stream.id}`,\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const renderList = () => {\n    return streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/streams/${stream.id}`,\n            className: \"header\",\n            children: stream.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const renderCreate = () => {\n    if (isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Streams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui celled list\",\n      children: renderList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), renderCreate()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StreamList, \"BHtpQ7VAlnl0+Ae9Y0f0PoNMFU8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = StreamList;\nexport default StreamList; // class StreamList extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStreams();\n//   }\n//   renderAdmin(stream) {\n//     if (stream.userId === this.props.currentUserId) {\n//       return (\n//         <div className=\"right floated content\">\n//           <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n//             Edit\n//           </Link>\n//           <Link\n//             to={`/streams/delete/${stream.id}`}\n//             className=\"ui button negative\"\n//           >\n//             Delete\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n//   renderList() {\n//     return this.props.streams.map((stream) => {\n//       return (\n//         <div className=\"item\" key={stream.id}>\n//           {this.renderAdmin(stream)}\n//           <i className=\"large middle aligned icon camera\" />\n//           <div className=\"content\">\n//             <Link to={`/streams/${stream.id}`} className=\"header\">{stream.title}</Link>\n//             <div className=\"description\">{stream.description}</div>\n//           </div>\n//         </div>\n//       );\n//     });\n//   }\n//   renderCreate() {\n//     if (this.props.isSignedIn) {\n//       return (\n//         <div style={{ textAlign: \"right\" }}>\n//           <Link to=\"/streams/new\" className=\"ui button primary\">\n//             Create Stream\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h2>Streams</h2>\n//         <div className=\"ui celled list\">{this.renderList()}</div>\n//         {this.renderCreate()}\n//       </div>\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     streams: Object.values(state.streams),\n//     currentUserId: state.auth.userId,\n//     isSignedIn: state.auth.isSignedIn\n//   };\n// };\n// export default connect(mapStateToProps, { fetchStreams })(StreamList);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamList.js"],"names":["React","useEffect","useSelector","useDispatch","fetchStreams","Link","StreamList","dispatch","streams","state","Object","values","currentUserId","auth","userId","isSignedIn","params","renderAdmin","stream","id","renderList","map","title","description","renderCreate","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst StreamList = () => {\n  const dispatch = useDispatch();\n  const streams = useSelector((state) => Object.values(state.streams));\n  const currentUserId = useSelector((state) => state.auth.userId);\n  const isSignedIn = useSelector((state) => state.auth.isSignedIn);\n\n  useEffect(\n    (params) => {\n      dispatch(fetchStreams());\n    },\n    [dispatch]\n  );\n\n  const renderAdmin = (stream) => {\n    if (stream.userId === currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <Link\n            to={`/streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  const renderList = () => {\n    return streams.map((stream) => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdmin(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            <Link to={`/streams/${stream.id}`} className=\"header\">\n              {stream.title}\n            </Link>\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const renderCreate = () => {\n    if (isSignedIn) {\n      return (\n        <div style={{ textAlign: \"right\" }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2>Streams</h2>\n      <div className=\"ui celled list\">{renderList()}</div>\n      {renderCreate()}\n    </div>\n  );\n};\n\nexport default StreamList;\n\n// class StreamList extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStreams();\n//   }\n\n//   renderAdmin(stream) {\n//     if (stream.userId === this.props.currentUserId) {\n//       return (\n//         <div className=\"right floated content\">\n//           <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n//             Edit\n//           </Link>\n//           <Link\n//             to={`/streams/delete/${stream.id}`}\n//             className=\"ui button negative\"\n//           >\n//             Delete\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n\n//   renderList() {\n//     return this.props.streams.map((stream) => {\n//       return (\n//         <div className=\"item\" key={stream.id}>\n//           {this.renderAdmin(stream)}\n//           <i className=\"large middle aligned icon camera\" />\n//           <div className=\"content\">\n//             <Link to={`/streams/${stream.id}`} className=\"header\">{stream.title}</Link>\n//             <div className=\"description\">{stream.description}</div>\n//           </div>\n//         </div>\n//       );\n//     });\n//   }\n\n//   renderCreate() {\n//     if (this.props.isSignedIn) {\n//       return (\n//         <div style={{ textAlign: \"right\" }}>\n//           <Link to=\"/streams/new\" className=\"ui button primary\">\n//             Create Stream\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h2>Streams</h2>\n//         <div className=\"ui celled list\">{this.renderList()}</div>\n//         {this.renderCreate()}\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     streams: Object.values(state.streams),\n//     currentUserId: state.auth.userId,\n//     isSignedIn: state.auth.isSignedIn\n//   };\n// };\n\n// export default connect(mapStateToProps, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}