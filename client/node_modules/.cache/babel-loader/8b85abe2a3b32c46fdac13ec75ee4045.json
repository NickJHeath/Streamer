{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicke\\\\OneDrive\\\\Stuff\\\\Documents\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst StreamList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StreamList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = StreamList;\nexport default StreamList; // class StreamList extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStreams();\n//   }\n//   renderAdmin(stream) {\n//     if (stream.userId === this.props.currentUserId) {\n//       return (\n//         <div className=\"right floated content\">\n//           <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n//             Edit\n//           </Link>\n//           <Link\n//             to={`/streams/delete/${stream.id}`}\n//             className=\"ui button negative\"\n//           >\n//             Delete\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n//   renderList() {\n//     return this.props.streams.map((stream) => {\n//       return (\n//         <div className=\"item\" key={stream.id}>\n//           {this.renderAdmin(stream)}\n//           <i className=\"large middle aligned icon camera\" />\n//           <div className=\"content\">\n//             <Link to={`/streams/${stream.id}`} className=\"header\">{stream.title}</Link>\n//             <div className=\"description\">{stream.description}</div>\n//           </div>\n//         </div>\n//       );\n//     });\n//   }\n//   renderCreate() {\n//     if (this.props.isSignedIn) {\n//       return (\n//         <div style={{ textAlign: \"right\" }}>\n//           <Link to=\"/streams/new\" className=\"ui button primary\">\n//             Create Stream\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h2>Streams</h2>\n//         <div className=\"ui celled list\">{this.renderList()}</div>\n//         {this.renderCreate()}\n//       </div>\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     streams: Object.values(state.streams),\n//     currentUserId: state.auth.userId,\n//     isSignedIn: state.auth.isSignedIn\n//   };\n// };\n// export default connect(mapStateToProps, { fetchStreams })(StreamList);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamList.js"],"names":["React","useSelector","useDispatch","fetchStreams","Link","StreamList","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;GAAMG,U;UACaH,W;;;KADbG,U;AAMN,eAAeA,UAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst StreamList = () => {\n  const dispatch = useDispatch();\n\n  return <div>Test</div>;\n};\n\nexport default StreamList;\n\n// class StreamList extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStreams();\n//   }\n\n//   renderAdmin(stream) {\n//     if (stream.userId === this.props.currentUserId) {\n//       return (\n//         <div className=\"right floated content\">\n//           <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n//             Edit\n//           </Link>\n//           <Link\n//             to={`/streams/delete/${stream.id}`}\n//             className=\"ui button negative\"\n//           >\n//             Delete\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n\n//   renderList() {\n//     return this.props.streams.map((stream) => {\n//       return (\n//         <div className=\"item\" key={stream.id}>\n//           {this.renderAdmin(stream)}\n//           <i className=\"large middle aligned icon camera\" />\n//           <div className=\"content\">\n//             <Link to={`/streams/${stream.id}`} className=\"header\">{stream.title}</Link>\n//             <div className=\"description\">{stream.description}</div>\n//           </div>\n//         </div>\n//       );\n//     });\n//   }\n\n//   renderCreate() {\n//     if (this.props.isSignedIn) {\n//       return (\n//         <div style={{ textAlign: \"right\" }}>\n//           <Link to=\"/streams/new\" className=\"ui button primary\">\n//             Create Stream\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h2>Streams</h2>\n//         <div className=\"ui celled list\">{this.renderList()}</div>\n//         {this.renderCreate()}\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     streams: Object.values(state.streams),\n//     currentUserId: state.auth.userId,\n//     isSignedIn: state.auth.isSignedIn\n//   };\n// };\n\n// export default connect(mapStateToProps, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}