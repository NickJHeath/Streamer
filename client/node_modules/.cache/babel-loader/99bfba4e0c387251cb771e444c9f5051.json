{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicke\\\\OneDrive\\\\Stuff\\\\Documents\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamDelete.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchStream, deleteStream } from \"../../actions\";\n\nconst StreamDelete = props => {\n  _s();\n\n  const id = props.match.params.id;\n  const dispatch = useDispatch();\n  const stream = useSelector(state => state.streams[id]);\n  useEffect(() => {\n    dispatch(fetchStream(id));\n  }, [dispatch, id]);\n\n  const renderActions = () => {\n    const {\n      id\n    } = props.match.params;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(deleteStream(id)),\n        className: \"ui button negative\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderContent = () => {\n    if (!stream) {\n      return \"Are you sure you want to delete this stream?\";\n    }\n\n    return `Are you sure you want to delete this stream with title: ${stream.title}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Delete Stream\",\n    content: renderContent(),\n    actions: renderActions(),\n    onDismiss: () => history.push(\"/\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StreamDelete, \"9zZ5o+8jxUoQ5TcoEUF7e1ODAh8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = StreamDelete;\nexport default StreamDelete; // class StreamDelete extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStream(this.props.match.params.id);\n//   }\n//   renderActions() {\n//     const { id } = this.props.match.params;\n//     return (\n//       <React.Fragment>\n//         <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\n//         <Link to=\"/\" className=\"ui button\">Cancel</Link>\n//       </React.Fragment>\n//     );\n//   }\n//   renderContent() {\n//     if (!this.props.stream) {\n//       return \"Are you sure you want to delete this stream?\";\n//     }\n//     return `Are you sure you want to delete this stream with title: ${this.props.stream.title}`;\n//   }\n//   render() {\n//     return (\n//         <Modal\n//           title=\"Delete Stream\"\n//           content={this.renderContent()}\n//           actions={this.renderActions()}\n//           onDismiss={() => history.push(\"/\")}\n//         />\n//     );\n//   }\n// }\n// const mapStateToProps = (state, ownProps) => {\n//   return { stream: state.streams[ownProps.match.params.id] };\n// };\n// export default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamDelete\");","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamDelete.js"],"names":["Link","React","useEffect","Modal","history","useSelector","useDispatch","fetchStream","deleteStream","StreamDelete","props","id","match","params","dispatch","stream","state","streams","renderActions","renderContent","title","push"],"mappings":";;;;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,MAAM,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcN,EAAd,CAAZ,CAA1B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACP,WAAW,CAACI,EAAD,CAAZ,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,EAAWH,EAAX,CAFM,CAAT;;AAIA,QAAMO,aAAa,GAAG,MAAM;AAC1B,UAAM;AAAEP,MAAAA;AAAF,QAASD,KAAK,CAACE,KAAN,CAAYC,MAA3B;AAEA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AACE,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACN,YAAY,CAACG,EAAD,CAAb,CADzB;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAhBD;;AAkBA,QAAMQ,aAAa,GAAG,MAAM;AAC1B,QAAI,CAACJ,MAAL,EAAa;AACX,aAAO,8CAAP;AACD;;AAED,WAAQ,2DAA0DA,MAAM,CAACK,KAAM,EAA/E;AACD,GAND;;AAQA,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,OAAO,EAAED,aAAa,EAFxB;AAGE,IAAA,OAAO,EAAED,aAAa,EAHxB;AAIE,IAAA,SAAS,EAAE,MAAMd,OAAO,CAACiB,IAAR,CAAa,GAAb;AAJnB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3CD;;GAAMZ,Y;UAEaH,W,EACFD,W;;;KAHXI,Y;AA6CN,eAAeA,YAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import { Link } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchStream, deleteStream } from \"../../actions\";\n\nconst StreamDelete = (props) => {\n  const id = props.match.params.id;\n  const dispatch = useDispatch();\n  const stream = useSelector((state) => state.streams[id]);\n\n  useEffect(() => {\n    dispatch(fetchStream(id));\n  }, [dispatch, id]);\n\n  const renderActions = () => {\n    const { id } = props.match.params;\n\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => dispatch(deleteStream(id))}\n          className=\"ui button negative\"\n        >\n          Delete\n        </button>\n        <Link to=\"/\" className=\"ui button\">\n          Cancel\n        </Link>\n      </React.Fragment>\n    );\n  };\n\n  const renderContent = () => {\n    if (!stream) {\n      return \"Are you sure you want to delete this stream?\";\n    }\n\n    return `Are you sure you want to delete this stream with title: ${stream.title}`;\n  };\n\n  return (\n    <Modal\n      title=\"Delete Stream\"\n      content={renderContent()}\n      actions={renderActions()}\n      onDismiss={() => history.push(\"/\")}\n    />\n  );\n};\n\nexport default StreamDelete;\n\n// class StreamDelete extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStream(this.props.match.params.id);\n//   }\n\n//   renderActions() {\n//     const { id } = this.props.match.params;\n\n//     return (\n//       <React.Fragment>\n//         <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\n//         <Link to=\"/\" className=\"ui button\">Cancel</Link>\n//       </React.Fragment>\n//     );\n//   }\n\n//   renderContent() {\n//     if (!this.props.stream) {\n//       return \"Are you sure you want to delete this stream?\";\n//     }\n\n//     return `Are you sure you want to delete this stream with title: ${this.props.stream.title}`;\n//   }\n\n//   render() {\n//     return (\n//         <Modal\n//           title=\"Delete Stream\"\n//           content={this.renderContent()}\n//           actions={this.renderActions()}\n//           onDismiss={() => history.push(\"/\")}\n//         />\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state, ownProps) => {\n//   return { stream: state.streams[ownProps.match.params.id] };\n// };\n\n// export default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}