{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nicke\\\\OneDrive\\\\Stuff\\\\Documents\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\",\n    _s = $RefreshSig$();\n\nimport _ from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nconst StreamEdit = () => {\n  _s();\n\n  const stream = useSelector(state => {\n    state.streams[props.match.params.id];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StreamEdit, \"QnNRLGjBunlgX8tquRDYYYeEhX8=\", false, function () {\n  return [useSelector];\n});\n\n_c = StreamEdit;\nexport default StreamEdit; // class StreamEdit extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStream(this.props.match.params.id);\n//   }\n//   onSubmit = (formValues) => {\n//     this.props.editStream(this.props.match.params.id, formValues);\n//   };\n//   render() {\n//     if (!this.props.stream) {\n//       return <div>Loading...</div>;\n//     }\n//     return (\n//       <div>\n//         <h3>Edit a Stream</h3>\n//         <StreamForm\n//           initialValues={_.pick(this.props.stream, 'title', 'description')}\n//           onSubmit={this.onSubmit}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// const mapStateToProps = (state, ownProps) => {\n//   return { stream: state.streams[ownProps.match.params.id] };\n// };\n// export default connect(mapStateToProps, { fetchStream, editStream })(\n//   StreamEdit\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamEdit\");","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamEdit.js"],"names":["_","React","useEffect","connect","useSelector","fetchStream","editStream","StreamForm","StreamEdit","stream","state","streams","props","match","params","id"],"mappings":";;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGL,WAAW,CAAEM,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,OAAN,CAAcC,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAjC;AACD,GAFyB,CAA1B;AAIA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAND;;GAAMP,U;UACWJ,W;;;KADXI,U;AAQN,eAAeA,UAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import _ from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nconst StreamEdit = () => {\n  const stream = useSelector((state) => {\n    state.streams[props.match.params.id];\n  });\n\n  return <div>Text</div>;\n};\n\nexport default StreamEdit;\n\n// class StreamEdit extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStream(this.props.match.params.id);\n//   }\n\n//   onSubmit = (formValues) => {\n//     this.props.editStream(this.props.match.params.id, formValues);\n//   };\n\n//   render() {\n//     if (!this.props.stream) {\n//       return <div>Loading...</div>;\n//     }\n//     return (\n//       <div>\n//         <h3>Edit a Stream</h3>\n//         <StreamForm\n//           initialValues={_.pick(this.props.stream, 'title', 'description')}\n//           onSubmit={this.onSubmit}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state, ownProps) => {\n//   return { stream: state.streams[ownProps.match.params.id] };\n// };\n\n// export default connect(mapStateToProps, { fetchStream, editStream })(\n//   StreamEdit\n// );\n"]},"metadata":{},"sourceType":"module"}