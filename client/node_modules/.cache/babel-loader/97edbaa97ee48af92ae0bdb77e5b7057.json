{"ast":null,"code":"import { FETCH_STREAM, FETCH_STREAMS, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM } from \"../actions/types\";\nimport _ from \"lodash\";\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/reducers/streamReducer.js"],"names":["FETCH_STREAM","FETCH_STREAMS","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","_","state","action","type","payload","id","mapKeys","omit"],"mappings":"AAAA,SACEA,YADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,aALF,QAMO,kBANP;AAOA,OAAOC,CAAP,MAAc,QAAd;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAKR,aAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAY,WAAGD,CAAC,CAACM,OAAF,CAAUJ,MAAM,CAACE,OAAjB,EAAyB,IAAzB;AAAf,OAAP;;AACF,SAAKP,aAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAKN,WAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAKL,aAAL;AACE,aAAOC,CAAC,CAACO,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACE,OAArB,CAAP;;AACF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD","sourcesContent":["import {\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  CREATE_STREAM,\n  EDIT_STREAM,\n  DELETE_STREAM,\n} from \"../actions/types\";\nimport _ from \"lodash\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case FETCH_STREAMS:\n      return { ...state, ..._.mapKeys(action.payload,'id') };\n    case CREATE_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case EDIT_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}