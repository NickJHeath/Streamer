{"ast":null,"code":"import streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = (formValues, getState) => async dispatch => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post(\"/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","EDIT_STREAM","DELETE_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","getState","dispatch","auth","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,aAPF,QAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAG,CAACC,UAAD,EAAaC,QAAb,KAE5B,MAAOC,QAAP,IAAoB;AAClB,QAAM;AAAEP,IAAAA;AAAF,MAAaM,QAAQ,GAAGE,IAA9B;AAEA,QAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAACmB,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGL,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AAEAO,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAML,QAAN,IAAkB;AAClD,QAAME,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,CAAY,UAAZ,CAAvB;AAEAN,EAAAA,QAAQ,CAAC;AAACN,IAAAA,IAAI,EAAEL,aAAP;AAAsBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,WAAW,GAAGC,EAAE,IAAI,MAAMR,QAAN,IAAkB;AACjD,QAAME,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEN,YAAR;AAAsBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKV,UAAL,KAAoB,MAAME,QAAN,IAAkB;AAC9D,QAAME,QAAQ,GAAG,MAAMlB,OAAO,CAAC0B,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BV,UAA9B,CAAvB;AAEAE,EAAAA,QAAQ,CAAC;AAACN,IAAAA,IAAI,EAACJ,WAAN;AAAmBK,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAArC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMR,QAAN,IAAkB;AACpD,QAAMhB,OAAO,CAAC4B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAR,EAAAA,QAAQ,CAAC;AAACN,IAAAA,IAAI,EAAEH,aAAP;AAAsBI,IAAAA,OAAO,EAAEa;AAA/B,GAAD,CAAR;AACD,CAJM","sourcesContent":["import streams from \"../apis/streams\";\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  EDIT_STREAM,\n  DELETE_STREAM\n} from \"./types\";\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId,\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\nexport const createStream = (formValues, getState) => \n\nasync (dispatch) => {\n  const { userId } = getState().auth;\n\n  const response = await streams.post(\"/streams\", { ...formValues, userId });\n\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n\n  dispatch({type: FETCH_STREAMS, payload: response.data});\n};\n\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues)\n\n  dispatch({type:EDIT_STREAM, payload: response.data})\n}\n\nexport const deleteStream = (id) => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({type: DELETE_STREAM, payload: id});\n};\n"]},"metadata":{},"sourceType":"module"}