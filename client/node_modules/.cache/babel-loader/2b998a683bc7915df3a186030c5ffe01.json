{"ast":null,"code":"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nonSubmit = formValues => {\n  this.props.createStream(formValues);\n};\n\nconst StreamCreate = params => {}; // class StreamCreate extends React.Component {\n//   onSubmit = (formValues) => {\n//     this.props.createStream(formValues);\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h3>Create a Stream</h3>\n//         <StreamForm onSubmit={this.onSubmit} />\n//       </div>\n//     );\n//   }\n// }\n// const validate = (formValues) => {\n//   // looks for props within errors obj that has same name as the form props\n//   const errors = {};\n//   if (!formValues.title) {\n//     errors.title = \"You must enter a title\";\n//   }\n// }\n// export default connect(null, { createStream })(StreamCreate);\n\n\n_c = StreamCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamCreate\");","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamCreate.js"],"names":["React","useDispatch","useSelector","createStream","StreamForm","onSubmit","formValues","props","StreamCreate","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEAC,QAAQ,GAAIC,UAAD,IAAgB;AACzB,OAAKC,KAAL,CAAWJ,YAAX,CAAwBG,UAAxB;AACD,CAFD;;AAIA,MAAME,YAAY,GAAIC,MAAD,IAAY,CAAE,CAAnC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;KA1BMD,Y","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nonSubmit = (formValues) => {\n  this.props.createStream(formValues);\n};\n\nconst StreamCreate = (params) => {};\n\n// class StreamCreate extends React.Component {\n//   onSubmit = (formValues) => {\n//     this.props.createStream(formValues);\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h3>Create a Stream</h3>\n//         <StreamForm onSubmit={this.onSubmit} />\n//       </div>\n//     );\n//   }\n// }\n\n// const validate = (formValues) => {\n//   // looks for props within errors obj that has same name as the form props\n//   const errors = {};\n\n//   if (!formValues.title) {\n//     errors.title = \"You must enter a title\";\n//   }\n// }\n\n// export default connect(null, { createStream })(StreamCreate);\n"]},"metadata":{},"sourceType":"module"}