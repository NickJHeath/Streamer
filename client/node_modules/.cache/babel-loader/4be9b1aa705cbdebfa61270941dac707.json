{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nicke\\\\OneDrive\\\\Stuff\\\\Documents\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from \"react\";\nimport flv from \"flv.js\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n    this.buildPlayer();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.player.stream) {\n      return;\n    }\n\n    this.player = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${this.props.match.params.id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 36\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: \"100%\"\n        },\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.stream.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: this.props.stream.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:/Users/nicke/OneDrive/Stuff/Documents/streams/client/src/components/streams/StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","Component","constructor","props","videoRef","createRef","componentDidMount","match","params","id","buildPlayer","player","stream","createPlayer","type","url","attachMediaElement","current","load","render","width","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,QAAL,gBAAgBR,KAAK,CAACS,SAAN,EAAhB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACC,SAAKC,WAAL;AACF;;AAEDA,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAKC,MAAL,IAAe,CAAC,KAAKA,MAAL,CAAYC,MAAhC,EAAwC;AACtC;AACD;;AACD,SAAKD,MAAL,GAAcd,GAAG,CAACgB,YAAJ,CAAiB;AAC7BC,MAAAA,IAAI,EAAE,KADuB;AAE7BC,MAAAA,GAAG,EAAG,8BAA6B,KAAKZ,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG;AAFjC,KAAjB,CAAd;AAIA,SAAKE,MAAL,CAAYK,kBAAZ,CAA+B,KAAKZ,QAAL,CAAca,OAA7C;AACA,SAAKN,MAAL,CAAYO,IAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKhB,KAAL,CAAWS,MAAhB,EAAwB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACxB,wBACE;AAAA,8BACE;AAAO,QAAA,GAAG,EAAE,KAAKR,QAAjB;AAA2B,QAAA,KAAK,EAAE;AAAEgB,UAAAA,KAAK,EAAE;AAAT,SAAlC;AAAqD,QAAA,QAAQ,EAAE;AAA/D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK,KAAKjB,KAAL,CAAWS,MAAX,CAAkBS;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAK,KAAKlB,KAAL,CAAWS,MAAX,CAAkBU;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAjCsC;;AAoCzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEb,IAAAA,MAAM,EAAEY,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAAClB,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeX,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport flv from \"flv.js\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n     this.buildPlayer();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.player.stream) {\n      return;\n    }\n    this.player = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${this.props.match.params.id}.flv`,\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) return <div>Loading...</div>;\n    return (\n      <div>\n        <video ref={this.videoRef} style={{ width: \"100%\" }} controls={true} />\n        <h1>{this.props.stream.title}</h1>\n        <h5>{this.props.stream.description}</h5>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\n"]},"metadata":{},"sourceType":"module"}